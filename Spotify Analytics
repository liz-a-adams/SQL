--I downloaded Spotify data from Kaggle. Then I created a table and performed multiple SQL queries--

--Creates the table-- 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

--Imported data into the table through .CSV, then ran the following queries--

--Which artists have more than 1 song on the list and how many do they have?
SELECT
    artist_name,
    COUNT(artist_name) AS number_of_songs
FROM Spotifydata
GROUP BY artist_name
HAVING number_of_songs > 1
ORDER BY number_of_songs DESC;

--What artist released the longest song?
SELECT
    artist_name,
    track_name
FROM Spotifydata
ORDER BY duration_ms
LIMIT 1;

--Who are the top 10 artists based on popularity?
SELECT
    artist_name
FROM Spotifydata
ORDER BY popularity
LIMIT 10;

--What's the average danceability for the 10 most popular songs?
SELECT
    AVG(danceability)
FROM Spotifydata
WHERE popularity IN (SELECT
                          popularity
                      FROM Spotifydata
                      ORDER BY popularity                      
                      LIMIT 10);

--Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH average_popularity_CTE AS (
                    SELECT
                        artist_name,
                        AVG(popularity) AS average_popularity
                    FROM Spotifydata
                    GROUP BY artist_name
                  )
SELECT
    artist_name,
    average_popularity,
    CASE
        WHEN average_popularity >= 90 THEN "Top Star"
        ELSE ""
        END star_potential
FROM average_popularity_CTE
WHERE average_popularity >= 90
ORDER BY average_popularity DESC;
